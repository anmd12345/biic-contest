@using BIIC_Contest.Dtos

@{
    ViewBag.Title = "CreateNews";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";

    List<CategoryDto> categories = ViewBag.categories;
}

@section styles{
    <link href="~/vendors/flatpickr/flatpickr.min.css" rel="stylesheet">
    <link href="~/vendors/choices/choices.min.css" rel="stylesheet">

}

<form id="createNewsForm">
    @Html.AntiForgeryToken()

    <div class="row justify-content-between align-items-end g-3 mb-5">
        <div class="col-12 col-sm-auto col-xl-8">
            <h2 class="mb-0">Tạo bài viết</h2>
        </div>
        <div class="col-12 col-sm-auto col-xl-4">
            <div class="d-flex">
                <button class="btn btn-primary px-5 w-100 text-nowrap" type="button" onclick="sendNews(this)" id="btn-send">Đăng bài viết</button>
                <button class="btn btn-primary px-5 w-100 text-nowrap" type="button" hidden id="btn-loading">
                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                    Đang gửi...
                </button>
            </div>
        </div>
    </div>

    <div class="row g-5">
        <div class="col-xl-12">
            <div class="row gx-3 gy-4">
                <h4 class="fs-7 mb-0">Thông tin chi tiết bài viết</h4>

                <div class="col-sm-6 col-md-12">
                    <div class="form-check form-switch">
                        <input class="form-check-input" type="checkbox" id="isPrioritySwitch">
                        <label class="form-check-label" for="isPrioritySwitch">Ưu tiên hiển thị bài viết</label>
                    </div>
                </div>

                <div class="col-sm-6 col-md-4">
                    <label class="form-label fw-bold text-primary mb-2">Trạng thái bài viết</label>
                    <div class="btn-group w-100" role="group">
                        <input type="radio" class="btn-check" name="statusOptions" id="statusHidden" value="0" autocomplete="off">
                        <label class="btn btn-outline-danger" for="statusHidden">Ẩn</label>

                        <input type="radio" class="btn-check" name="statusOptions" id="statusVisible" value="1" autocomplete="off" checked>
                        <label class="btn btn-outline-success" for="statusVisible">Hiển thị</label>

                        <input type="radio" class="btn-check" name="statusOptions" id="statusDraft" value="2" autocomplete="off">
                        <label class="btn btn-outline-secondary" for="statusDraft">Lưu nháp</label>
                    </div>
                </div>


                <div class="col-sm-12 col-md-12">
                    <div class="d-flex flex-wrap mb-2">
                        <h4 class="mb-0 text-body-highlight me-2">Danh mục</h4><a class="fw-bold fs-9" href="#modal-add-new-category" data-bs-toggle="modal">Thêm danh mục mới</a>
                    </div>
                    <div class="form-floating">
                        <select class="form-select" id="floatingSelectPrivacy" name="CategoryId" required>
                            @if (categories == null)
                            {
                                <option selected="selected">Danh mục rỗng!</option>
                            }
                            else
                            {
                                foreach (var category in categories)
                                {
                                    if (category.CategoryName != "Cuộc thi")
                                    {
                                        <option value="@category.Id">@category.CategoryName</option>
                                    }
                                }
                            }
                        </select>
                        <label for="floatingSelectPrivacy">Danh mục bài viết</label>
                    </div>
                </div>

                <div class="col-sm-6 col-md-12">
                    <div class="form-floating">
                        <input class="form-control" id="floatingEventInput" type="text" name="Title" placeholder="Tiêu đề bài viết" required />
                        <label for="floatingEventInput">Tiêu đề bài viết</label>
                    </div>
                </div>

                <div class="col-12 gy-6">
                    <h4 class="fs-7">Banner bài viết</h4>
                    <div class="form-group">
                        <label for="bannerInput">Chọn ảnh banner</label>
                        <input name="Banner" type="file" id="bannerInput" class="form-control" accept="image/*" />
                        <img id="bannerPreview" src="#" alt="Preview banner" style="display:none; max-height: 200px; margin-top: 10px;" />
                    </div>
                </div>

                <div class="col-12 gy-6">
                    <h4 class="fs-7">Nội dung bài viết</h4>
                    <div class="form-floating">
                        <textarea id="content" style="height: 500px" class="form-control tinymce" name="Content" required></textarea>
                    </div>
                </div>

            </div>
        </div>
    </div>
</form>

<div id="responseMessage"></div>

@section scripts {
    <script src="~/vendors/choices/choices.min.js"></script>
    <script src="~/vendors/dropzone/dropzone-min.js"></script>
    <script src="~/vendors/flatpickr/flatpickr.min.js"></script>
    <script src="https://cdn.tiny.cloud/1/knomrrtoejbhyvpv9jjulyqaj0ndmqzvy2dxq64mr7co0wz8/tinymce/7/tinymce.min.js" referrerpolicy="origin"></script>
    <script src="~/scripts/fetch-api.js"></script>
    <script src="~/scripts/show-notification.js"></script>
    <script>
        tinymce.init({
            selector: '#content',
            plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount',
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table | align lineheight | numlist bullist indent outdent | emoticons charmap | removeformat',
            setup: function (editor) {
                editor.on('change', function () {
                    editor.save();
                });
            }
        });

        const btnLoading = document.getElementById("btn-loading");
        const btnSend = document.getElementById("btn-send");


        async function sendNews(button) {
            btnLoading.hidden = false;
            btnSend.hidden = true;

            const titleEl = document.querySelector('#floatingEventInput');
            const contentEl = tinymce.get('content');
            const categoryIdEl = document.querySelector('#floatingSelectPrivacy');
            const isPriority = document.getElementById("isPrioritySwitch").checked;
            const bannerInput = document.getElementById("bannerInput");
            const statusValue = document.querySelector('input[name="statusOptions"]:checked').value;

            const formData = new FormData();
            formData.append("Title", titleEl.value);
            formData.append("Content", contentEl.getContent());
            formData.append("CategoryId", categoryIdEl.value);
            formData.append("IsPriority", isPriority);
            formData.append("Status", parseInt(statusValue));

            if (bannerInput && bannerInput.files.length > 0) {
                formData.append("Banner", bannerInput.files[0]);
            }

            try {
                const response = await fetch("/apis/v1/news/create", {
                    method: "POST",
                    body: formData
                });

                const data = await response.json();
                if (data.Success) {
                    showSuccessContactNotification(data.Message);
                    document.getElementById("createNewsForm").reset();
                    contentEl.setContent("");
                } else {
                    showErrorNotification(data.Message);
                    titleEl.disabled = false;
                    categoryIdEl.disabled = false;
                }
            } catch (err) {
                console.error("Lỗi khi gửi bài viết:", err);
                showErrorNotification("Gửi bài viết thất bại.");
            }

            btnLoading.hidden = true;
            btnSend.hidden = false;
        }


        document.getElementById("bannerInput").addEventListener("change", function (event) {
            const preview = document.getElementById("bannerPreview");
            const file = event.target.files[0];

            if (file && file.type.startsWith("image/")) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    preview.src = e.target.result;
                    preview.style.display = "block";
                };
                reader.readAsDataURL(file);
            } else {
                preview.src = "#";
                preview.style.display = "none";
            }
        });


    </script>
}
